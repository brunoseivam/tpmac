file $(TPMAC)/tbDb/TB_Calibrate.db
{
	pattern { assy, d1, d2, d3 }
# pmac11:
        { 23b:VF:Vz:, 23b:VF:Z1:, 23b:VF:Z2:, 23b:VF:Z3: }
}
#----------------------------------------------------------------------------  
file $(TPMAC)/tbDb/TB_LimAmp.db
{
 	pattern { assy, x1, x2, x3, d1, d2, d3 }
# pmac11:
        { 23b:VF:Vz:, 23b:VF:VZ:, 23b:VF:VA:, 23b:VF:VR:, 23b:VF:Z1:, 23b:VF:Z2:, 23b:VF:Z3: }
}
#----------------------------------------------------------------------------  
file $(TPMAC)/tbDb/TB_Tsub.db
{
 	pattern { assy, x1, x2, x3, d1, d2, d3, m1, m2, m3, val, nla, tsub }
# tsub's are C programs implementing conversion between drives <-> motors <-> axes.
# nla=0/1 correspond to absolute/relative conversion. 
# pmac11:
  { 23b:VF:Vz:, 23b:VF:VZ:, 23b:VF:VA:, 23b:VF:VR:, 23b:VF:Z1:, 23b:VF:Z2:, 23b:VF:Z3:, 23b:VF:mz1:, 23b:VF:mz2:, 23b:VF:mz3:, RqsPos, 0, tsubTBSt }
  { 23b:VF:Vz:, 23b:VF:VZ:, 23b:VF:VA:, 23b:VF:VR:, 23b:VF:Z1:, 23b:VF:Z2:, 23b:VF:Z3:, 23b:VF:mz1:, 23b:VF:mz2:, 23b:VF:mz3:, RqsBkl, 1, tsubTBSt }
}
#----------------------------------------------------------------------------  
file $(TPMAC)/tbDb/TB_TsubRbk.db
{
  pattern { assy, x1, desc_x1, egu_x1, x2, desc_x2, egu_x2, x3, desc_x3, egu_x3, d1, desc_d1, egu_d1, d2, desc_d2, egu_d2, d3, desc_d3, egu_d3, m1, m2, m3, val, nla, tsub }
# pmac11:
  { 23b:VF:Vz:, 23b:VF:VZ:, "VFM Z",    "(mm)", 23b:VF:VA:, "VFM Angle", "(mrad)", 23b:VF:VR:, "VFM Roll", "(mrad)", 23b:VF:Z1:, "VFM Z1", "(mm)", 23b:VF:Z2:, "VFM Z2", "(mm)", 23b:VF:Z3:, "VFM Z3", "(mm)", 23b:VF:mz1:, 23b:VF:mz2:, 23b:VF:mz3:, ActPos, 0, tsubTBSt }
}
#----------------------------------------------------------------------------  
file "$(TPMAC)/tbDb/TB_TsubSpeed.db"
{
  pattern { assy, x1, egu_x1, x2, egu_x2, x3, egu_x3, d1, egu_d1, d2, egu_d2, d3, egu_d3, m1, m2, m3, tsub }
# pmac11:
  { 23b:VF:Vz:, 23b:VF:VZ:, "(mm/s)", 23b:VF:VA:, "(mrad/s)", 23b:VF:VR:, "(mrad/s)", 23b:VF:Z1:, "(mm/s)", 23b:VF:Z2:, "(mm/s)", 23b:VF:Z3:, "(mm/s)", 23b:VF:mz1:, 23b:VF:mz2:, 23b:VF:mz3:, tsubTBSt }
}
